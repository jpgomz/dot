#!/usr/bin/env bash

# Instalar dependencias
if [ -f /etc/debian_version ]; then
    sudo apt-get install -y pass gpg git
elif [ -f /etc/redhat-release ]; then
    sudo dnf install -y pass gpg git
elif [ -f /etc/arch-release ]; then
    sudo pacman -S --noconfirm pass gnupg git
else
    echo "Distro no soportada. Instala manualmente pass y gpg."
    exit 1
fi

# Ruta al archivo de clave GPG
GPG_KEY_FILE="$DOTFILES/keys/gpg-keys.asc"

# Verificar e importar claves GPG
if ! gpg --list-secret-keys | grep -q sec; then
    if [ -f "$GPG_KEY_FILE" ]; then
        echo "Importando claves GPG desde archivo..."
        gpg --import "$GPG_KEY_FILE"
    else
        echo "Error: No hay claves GPG y el archivo $GPG_KEY_FILE no existe"
        echo "   Exporta tus claves con:"
        echo "   gpg --export-secret-keys --armor > gpg-keys.asc"
        exit 1
    fi
fi

# Clonar repositorio password-store
PASS_REPO="git@github.com:jpgomz/pwd-store.git"

if [ ! -d "$HOME/.password-store" ]; then
    echo "Clonando repositorio de contraseñas..."
    git clone "$PASS_REPO" "$HOME/.password-store"
else
    echo "El directorio .password-store ya existe. Haciendo backup..."
    mv "$HOME/.password-store" "$HOME/.password-store.bak.$(date +%s)"
    git clone "$PASS_REPO" "$HOME/.password-store"
fi

# Verificar configuración GPG
GPG_ID_FILE="$HOME/.password-store/.gpg-id"

# Si el archivo existe y tiene contenido válido
if [ -f "$GPG_ID_FILE" ] && grep -qE '^[A-F0-9]{40}$' "$GPG_ID_FILE"; then
    echo "Usando fingerprint existente de .gpg-id"
    GPG_ID=$(head -n1 "$GPG_ID_FILE")
else
    # Obtener fingerprint completo (40 caracteres)
    GPG_ID=$(gpg --list-secret-keys --with-colons --fingerprint \
        | awk -F: '/^fpr:/ { print $10 }' \
        | grep -E '^[A-F0-9]{40}$' | head -n1)

    if [ -z "$GPG_ID" ]; then
        echo "Error: No se encontraron claves GPG válidas"
        exit 1
    fi

    echo "$GPG_ID" > "$GPG_ID_FILE"
    echo "Actualizado .gpg-id con fingerprint completo"
fi

# Sincronización inicial
echo "Sincronizando contraseñas..."
pass git pull --rebase

echo "Configuración completada!"
echo "   Accede a tus contraseñas con: pass show <ruta>"